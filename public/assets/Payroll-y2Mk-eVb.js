import{r as a,j as e,C as we,m as c}from"./index-BjTnlPhf.js";import{a as d,F as p,w as Pe,x as Ee,y as _e,z as Be,A as Ne}from"./index-Ct3dmHuC.js";import{C as Le,a as Me}from"./CCardBody-BUnfTDcZ.js";import{C as He}from"./CCardHeader-DAJQWFTy.js";import{C as R}from"./CFormSelect-DkqwP2nv.js";import{C as ke,a as Ae,b as se,c as n,d as Te,e as o}from"./CTable-89OhOKgR.js";import{C as Ve,a as Re,b as Oe,c as $e,d as te}from"./DefaultLayout-B8fXLl1U.js";import{C as D,a as w,b as P,c as E}from"./CModalTitle-bDruVq4q.js";import{C as _}from"./CFormControlWrapper-Doaf6bkw.js";import{C as O}from"./CFormInput-BdkDcWHb.js";import{C as $}from"./CModalFooter-B-4tGFG6.js";const es=()=>{const[B,I]=a.useState([]),[ae,u]=a.useState([]),[re,f]=a.useState(!0),[l,ne]=a.useState(new Date().getMonth()+1),[i,Ie]=a.useState(new Date().getFullYear()),[g,oe]=a.useState("all"),[ie,J]=a.useState([]),[z,le]=a.useState(new Date().toLocaleString("default",{month:"long"})),[N,y]=a.useState(!1),[L,Y]=a.useState(""),[M,b]=a.useState(!1),[q,G]=a.useState(0),[r,ce]=a.useState(null),[de,S]=a.useState(!1),[H,X]=a.useState(""),[k,K]=a.useState(""),[Q,m]=a.useState(""),[he,me]=a.useState([]),[xe,je]=a.useState([]),[U,x]=a.useState(null),[pe,W]=a.useState(!1),[ue,C]=a.useState(!1),fe=async()=>{try{const s=await c.get("/api/job-positions");me(s.data)}catch(s){console.error("Error fetching job positions:",s),x("Failed to fetch job positions")}},ge=async()=>{try{const s=await c.get("/api/departments");J(s.data)}catch(s){console.error("Error fetching departments:",s),x("Failed to fetch departments")}},j=async()=>{var s,t,h,ee;try{f(!0),C(!1);const F=await c.get("/api/payrolls",{params:{year:i,month:l,calculate:!0},paramsSerializer:T=>Object.entries(T).map(([v,V])=>typeof V=="boolean"?`${v}=${V?"true":"false"}`:`${v}=${V}`).join("&")});if(((s=F.data)==null?void 0:s.length)>0){I(F.data),u(F.data),C(!0);const T=[...new Set(F.data.map(v=>v.department))];J(T)}else I([]),u([]),C(!1)}catch(A){console.error("Error:",(t=A.response)==null?void 0:t.data),x(((ee=(h=A.response)==null?void 0:h.data)==null?void 0:ee.message)||"Failed to fetch payroll"),C(!1)}finally{f(!1)}};a.useEffect(()=>{console.log(`Fetching payroll for ${l}/${i}`),j(),ge()},[l,i]),a.useEffect(()=>{u(g==="all"?B:B.filter(s=>s.department===g))},[g,B]);const ye=async()=>{var s,t;if(!H||!k){m("All fields are required");return}try{await c.post("/api/payrolls",{job_position:H,base_salary:parseFloat(k)}),S(!1),m(""),X(""),K(""),j()}catch(h){console.error("Error saving salary:",h),m(((t=(s=h.response)==null?void 0:s.data)==null?void 0:t.message)||"Failed to save salary")}};a.useEffect(()=>{fe(),j()},[i,l]),a.useEffect(()=>{le(new Date(i,l-1).toLocaleString("default",{month:"long"}))},[l,i]);const be=async()=>{try{const s=await c.get("/api/rates");Y(s.data.overtime_rate||"")}catch(s){console.error("Error fetching rates:",s),m("Failed to fetch overtime rate")}};a.useEffect(()=>{N&&be()},[N]);const Se=async()=>{var s,t;if(!L){m("Overtime rate is required");return}try{await c.put("/api/rates/overtime",{rate:parseFloat(L)}),y(!1),m(""),j()}catch(h){m(((t=(s=h.response)==null?void 0:s.data)==null?void 0:t.message)||"Failed to save overtime rate")}},Ce=async s=>{try{f(!0),ce(s);const t=await c.get("/api/benefits",{params:{employee_id:s.employee_id,year:i,month:l}});je(t.data),W(!0)}catch(t){console.error("Error fetching benefits:",t),x("Failed to fetch benefits data")}finally{f(!1)}},Z=async(s,t)=>{try{await c.put(`/api/payrolls/${s}`,{status:t}),j()}catch(h){console.error("Error updating status:",h),x("Failed to update payroll status")}},Fe=async()=>{try{await c.post("/api/bonus",{year:i,month:l,bonus:parseFloat(q)}),b(!1),j()}catch(s){console.error("Error saving bonus:",s),x("Failed to save bonus")}},ve=async()=>{var s;try{const t=await c.get("/api/payrolls",{params:{year:i,month:l}});G(((s=t.data)==null?void 0:s.bonus)||0)}catch(t){console.error("Error fetching bonus:",t),x("Failed to fetch bonus data")}};a.useEffect(()=>{M&&ve()},[M]),Array.from({length:new Date().getFullYear()-2020+1},(s,t)=>2020+t);const De=s=>{switch((s==null?void 0:s.toLowerCase())||"pending"){case"pending":return"warning";case"paid":return"success";default:return"secondary"}};return e.jsxs("div",{children:[e.jsxs(Le,{children:[e.jsxs(He,{className:"d-flex justify-content-between align-items-center flex-wrap",children:[e.jsx("strong",{children:"Employee Payroll"}),e.jsxs("div",{className:"d-flex flex-wrap gap-2",children:[e.jsx(R,{value:l,onChange:s=>ne(Number(s.target.value)),style:{width:"120px"},children:Array.from({length:12},(s,t)=>e.jsx("option",{value:t+1,children:new Date(2023,t).toLocaleString("default",{month:"long"})},t+1))}),e.jsxs(R,{value:g,onChange:s=>oe(s.target.value),style:{width:"150px"},children:[e.jsx("option",{value:"all",children:"All Departments"}),ie.map((s,t)=>e.jsx("option",{value:s,children:s},t))]}),e.jsx(d,{color:"primary",onClick:()=>y(!0),children:e.jsx(p,{icon:Pe})}),e.jsx(d,{color:"primary",onClick:()=>b(!0),children:e.jsx(p,{icon:Ee})}),e.jsx(d,{color:"info",onClick:()=>S(!0),children:e.jsx(p,{icon:_e})})]})]}),e.jsx(Me,{children:re?e.jsxs("div",{className:"text-center py-5",children:[e.jsx(we,{color:"primary"}),e.jsx("p",{className:"mt-2",children:"Loading payroll data..."})]}):U?e.jsxs("div",{className:"text-center py-5 text-danger",children:[e.jsx("h5",{children:"Error loading data"}),e.jsx("p",{children:U})]}):ue?e.jsx("div",{className:"table-responsive",children:e.jsxs(ke,{hover:!0,responsive:!0,children:[e.jsx(Ae,{children:e.jsxs(se,{children:[e.jsx(n,{children:"#"}),e.jsx(n,{children:"ID"}),e.jsx(n,{children:"Name"}),e.jsx(n,{children:"Department"}),e.jsx(n,{children:"Job Position"}),e.jsx(n,{children:"Base Salary"}),e.jsx(n,{children:"Overtime"}),e.jsx(n,{children:"Tax"}),e.jsx(n,{children:"Benefits"}),e.jsx(n,{children:"Bonus"}),e.jsx(n,{children:"Net Salary"}),e.jsx(n,{children:"Status"}),e.jsx(n,{children:"Action"})]})}),e.jsx(Te,{children:ae.map(s=>{const t=s.status||"Pending";return e.jsxs(se,{children:[e.jsx(o,{children:s.id}),e.jsx(o,{children:s.employee_id}),e.jsx(o,{children:s.name}),e.jsx(o,{children:s.department}),e.jsx(o,{children:s.job_position}),e.jsx(o,{children:parseFloat(s.base_salary||0).toLocaleString()}),e.jsx(o,{children:parseFloat(s.total_overtime_amount||0).toFixed(2)}),e.jsxs(o,{children:["₱",parseFloat(s.tax||0).toLocaleString("en-PH",{minimumFractionDigits:2,maximumFractionDigits:2})]}),e.jsx(o,{children:parseFloat(s.benefits_total||0).toLocaleString()}),e.jsx(o,{children:parseFloat(s.bonus||0).toFixed(2)}),e.jsx(o,{children:parseFloat(s.net_salary||0).toLocaleString()}),e.jsx(o,{children:e.jsx(Ve,{color:De(t),children:t})}),e.jsxs(o,{children:[e.jsx(d,{color:"secondary",onClick:()=>Ce(s),children:e.jsx(p,{icon:Be})}),e.jsxs(Re,{children:[e.jsx(Oe,{color:"link",size:"sm",children:e.jsx(p,{icon:Ne})}),e.jsxs($e,{children:[e.jsx(te,{onClick:()=>Z(s.id,"Paid"),disabled:t==="Paid",children:"Paid"}),e.jsx(te,{onClick:()=>Z(s.id,"Pending"),disabled:t==="Pending",children:"Pending"})]})]})]})]},s.employee_id)})})]})}):e.jsx("div",{className:"text-center py-5",children:e.jsx("p",{children:"No attendance records found"})})})]}),e.jsxs(D,{visible:N,onClose:()=>y(!1),children:[e.jsx(w,{children:e.jsx(P,{children:"Set Overtime Rate"})}),e.jsxs(E,{children:[e.jsx(_,{children:"Overtime Rate (per hour)"}),e.jsx(O,{type:"number",value:L,onChange:s=>Y(s.target.value),placeholder:"Enter overtime rate"})]}),e.jsxs($,{children:[e.jsx(d,{color:"secondary",onClick:()=>y(!1),children:"Close"}),e.jsx(d,{color:"primary",onClick:Se,children:"Save Rate"})]})]}),e.jsxs(D,{visible:M,onClose:()=>b(!1),children:[e.jsx(w,{children:e.jsx(P,{children:"Set Bonus"})}),e.jsxs(E,{children:[e.jsx(_,{children:"Bonus"}),e.jsx(O,{type:"number",value:q,onChange:s=>G(parseFloat(s.target.value)),placeholder:"Enter bonus"})]}),e.jsxs($,{children:[e.jsx(d,{color:"secondary",onClick:()=>b(!1),children:"Close"}),e.jsx(d,{color:"primary",onClick:Fe,children:"Save"})]})]}),e.jsxs(D,{visible:de,onClose:()=>S(!1),children:[e.jsx(w,{children:e.jsx(P,{children:"Manage Salaries"})}),e.jsxs(E,{children:[Q&&e.jsx("div",{className:"alert alert-danger",children:Q}),e.jsx(_,{children:"Job Position"}),e.jsxs(R,{value:H,onChange:s=>X(s.target.value),placeholder:"Select job position",children:[e.jsx("option",{value:"",children:"Select a job position"}),he.map((s,t)=>e.jsx("option",{value:s,children:s},t))]}),e.jsx(_,{className:"mt-3",children:"Base Salary"}),e.jsx(O,{type:"number",value:k,onChange:s=>K(s.target.value),placeholder:"Enter base salary"})]}),e.jsxs($,{children:[e.jsx(d,{color:"secondary",onClick:()=>S(!1),children:"Close"}),e.jsx(d,{color:"primary",onClick:ye,children:"Save Salary"})]})]}),e.jsxs(D,{visible:pe,onClose:()=>W(!1),size:"lg",children:[e.jsx(w,{closeButton:!0,children:e.jsxs(P,{children:["Payslip for ",r==null?void 0:r.name]})}),e.jsx(E,{children:r&&e.jsxs(e.Fragment,{children:[e.jsxs("div",{className:"mb-4",children:[e.jsxs("p",{children:[e.jsx("strong",{children:"Date Period:"})," ",z," 1, ",i," – ",z," 30,"," ",i]}),e.jsxs("p",{children:[e.jsx("strong",{children:"Employee Name:"})," ",r.name]}),e.jsxs("p",{children:[e.jsx("strong",{children:"Employee ID:"})," ",r.employee_id]}),e.jsxs("p",{children:[e.jsx("strong",{children:"Department:"})," ",r.department]}),e.jsxs("p",{children:[e.jsx("strong",{children:"Position:"})," ",r.job_position]})]}),e.jsx("div",{className:"table-responsive",style:{overflowX:"auto"},children:e.jsxs("table",{className:"table table-bordered",children:[e.jsx("thead",{children:e.jsxs("tr",{children:[e.jsx("th",{children:"Earnings"}),e.jsx("th",{children:"Amount"}),e.jsx("th",{children:"Deductions"}),e.jsx("th",{children:"Amount"})]})}),e.jsxs("tbody",{children:[e.jsxs("tr",{children:[e.jsx("td",{children:"Base Salary"}),e.jsxs("td",{children:["₱",parseFloat(r.base_salary||0).toLocaleString("en-PH",{minimumFractionDigits:2,maximumFractionDigits:2})]}),e.jsx("td",{children:"Tax"}),e.jsxs("td",{children:["₱",parseFloat(r.tax||0).toLocaleString("en-PH",{minimumFractionDigits:2,maximumFractionDigits:2})]})]}),e.jsxs("tr",{children:[e.jsx("td",{children:"Overtime Pay"}),e.jsxs("td",{children:["₱",parseFloat(r.total_overtime_amount||0).toLocaleString("en-PH",{minimumFractionDigits:2,maximumFractionDigits:2})]}),e.jsx("td",{colSpan:"2"})]}),e.jsxs("tr",{children:[e.jsx("td",{children:"Bonus"}),e.jsxs("td",{children:["₱",parseFloat(r.bonus||0).toLocaleString("en-PH",{minimumFractionDigits:2,maximumFractionDigits:2})]})]}),xe.map((s,t)=>e.jsxs("tr",{children:[e.jsx("td",{colSpan:"2"}),e.jsx("td",{children:s.type}),e.jsxs("td",{children:["₱",parseFloat(s.amount||0).toLocaleString("en-PH",{minimumFractionDigits:2,maximumFractionDigits:2})]})]},t)),e.jsxs("tr",{children:[e.jsx("th",{children:"Gross Salary"}),e.jsxs("th",{children:["₱",(parseFloat(r.base_salary||0)+parseFloat(r.total_overtime_amount||0)+parseFloat(r.bonus||0)).toLocaleString("en-PH",{minimumFractionDigits:2,maximumFractionDigits:2})]}),e.jsx("th",{children:"Total Deductions"}),e.jsxs("th",{children:["₱",(parseFloat(r.tax||0)+parseFloat(r.benefits_total||0)).toLocaleString("en-PH",{minimumFractionDigits:2,maximumFractionDigits:2})]})]}),e.jsxs("tr",{children:[e.jsx("th",{children:"Net Pay"}),e.jsxs("th",{colSpan:"3",children:["₱",(parseFloat(r.base_salary||0)+parseFloat(r.total_overtime_amount||0)+parseFloat(r.bonus||0)-parseFloat(r.tax||0)-parseFloat(r.benefits_total||0)).toLocaleString("en-PH",{minimumFractionDigits:2,maximumFractionDigits:2})]})]})]})]})})]})})]})]})};export{es as default};
