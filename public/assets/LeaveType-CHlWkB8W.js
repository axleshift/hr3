import{r as o,m as C,j as e}from"./index-4Pu1UTP-.js";import{a as d,F as T,s as G,t as J,v as K}from"./index-tKYfq6NO.js";import{C as O,a as Q}from"./CCardBody-UCF2WmLw.js";import{C as W}from"./CCardHeader-HTwtbQgD.js";import{C as b}from"./CAlert-BxMFfMCn.js";import{C as X,a as Y,b as L,c as h,d as Z,e as p}from"./CTable-BTP-K7u3.js";import{C as ee}from"./DefaultLayout-DEfGDL_p.js";import{C as w,a as F,b as U,c as M}from"./CModalTitle-C5MNNuDM.js";import{C as y}from"./CFormControlWrapper-D6DohQI9.js";import{C as u}from"./CFormInput-DqHrdGhi.js";import{C as S}from"./CFormSelect-BEpJiCio.js";import{C as k}from"./CModalFooter-BjmAu__D.js";const me=()=>{const[m,x]=o.useState([]),[B,j]=o.useState(!1),[R,v]=o.useState(!1),[c,i]=o.useState(""),[l,E]=o.useState({name:"",type:"Paid",pay_rate:100}),[n,_]=o.useState({id:null,name:"",type:"Paid",pay_rate:100});o.useEffect(()=>{A()},[]);const A=async()=>{try{const a=await C.get("/leave-types");if(Array.isArray(a.data)){const r=a.data.map(t=>({...t,pay_rate:parseFloat(t.pay_rate)||0}));x(r)}else console.error("Expected an array of leave types, but received:",a.data)}catch(a){console.error("Error fetching leave types:",a)}},f=a=>{const{name:r,value:t}=a.target,s={...l,[r]:t};r==="type"&&t==="Unpaid"&&(s.pay_rate=0),E(s)},g=a=>{const{name:r,value:t}=a.target,s={...n,[r]:t};r==="type"&&t==="Unpaid"&&(s.pay_rate=0),_(s)},P=a=>a.name.trim()?a.type==="Paid"&&(a.pay_rate<0||a.pay_rate>100)?"Pay rate must be between 0 and 100 for paid leave":"":"Leave type name is required",D=async()=>{var r,t;const a=P(l);if(a){i(a);return}try{const s=await C.post("/leave-types",{...l,pay_rate:l.type==="Unpaid"?0:l.pay_rate});x([...m,s.data]),j(!1),E({name:"",type:"Paid",pay_rate:100}),i("")}catch(s){console.error("Error creating leave type:",s),i(((t=(r=s.response)==null?void 0:r.data)==null?void 0:t.message)||"Failed to create leave type")}},H=async()=>{var r,t;const a=P(n);if(a){i(a);return}try{const s=await C.put(`/leave-types/${n.id}`,{...n,pay_rate:n.type==="Unpaid"?0:n.pay_rate}),q=m.map(N=>N.id===n.id?s.data:N);x(q),v(!1),i("")}catch(s){console.error("Error updating leave type:",s),i(((t=(r=s.response)==null?void 0:r.data)==null?void 0:t.message)||"Failed to update leave type")}},V=async a=>{var r,t;try{await C.delete(`/leave-types/${a}`),x(m.filter(s=>s.id!==a))}catch(s){console.error("Error deleting leave type:",s),i(((t=(r=s.response)==null?void 0:r.data)==null?void 0:t.message)||"Failed to delete leave type")}},$=a=>{_({...a,pay_rate:parseFloat(a.pay_rate)||0}),v(!0),i("")},z=(a,r)=>a==="Unpaid"?"Unpaid":`${r}%`,I=a=>a==="Paid"?"success":"secondary";return e.jsxs(O,{children:[e.jsxs(W,{className:"d-flex justify-content-between align-items-center flex-wrap",children:[e.jsx("strong",{children:"Leave Type List"}),e.jsx(d,{color:"primary",onClick:()=>j(!0),children:e.jsx(T,{icon:G})})]}),e.jsxs(Q,{children:[c&&e.jsx(b,{color:"danger",children:c}),e.jsx("div",{className:"table-responsive",children:e.jsxs(X,{striped:!0,hover:!0,responsive:!0,children:[e.jsx(Y,{children:e.jsxs(L,{children:[e.jsx(h,{children:"#"}),e.jsx(h,{children:"Leave Type"}),e.jsx(h,{children:"Type"}),e.jsx(h,{children:"Pay Rate"}),e.jsx(h,{children:"Actions"})]})}),e.jsx(Z,{children:m.length>0?m.map((a,r)=>e.jsxs(L,{children:[e.jsx(p,{children:r+1}),e.jsx(p,{children:a.name}),e.jsx(p,{children:e.jsx(ee,{color:I(a.type),children:a.type})}),e.jsx(p,{children:z(a.type,a.pay_rate)}),e.jsxs(p,{children:[e.jsx(d,{color:"info",size:"sm",className:"me-2",onClick:()=>$(a),children:e.jsx(T,{icon:J})}),e.jsx(d,{color:"danger",size:"sm",onClick:()=>V(a.id),children:e.jsx(T,{icon:K})})]})]},a.id)):e.jsx(L,{children:e.jsx(p,{colSpan:"6",className:"text-center",children:"No leave types found."})})})]})})]}),e.jsxs(w,{visible:B,onClose:()=>j(!1),children:[e.jsx(F,{children:e.jsx(U,{children:"Create New Leave Type"})}),e.jsxs(M,{children:[c&&e.jsx(b,{color:"danger",children:c}),e.jsxs("div",{className:"mb-3",children:[e.jsx(y,{children:"Leave Type Name"}),e.jsx(u,{type:"text",name:"name",value:l.name,onChange:f,placeholder:"Enter leave type name"})]}),e.jsxs("div",{className:"mb-3",children:[e.jsx(y,{children:"Leave Type"}),e.jsxs(S,{name:"type",value:l.type,onChange:f,children:[e.jsx("option",{value:"Paid",children:"Paid"}),e.jsx("option",{value:"Unpaid",children:"Unpaid"})]})]}),l.type==="Paid"&&e.jsxs("div",{className:"mb-3",children:[e.jsx(y,{children:"Pay Rate (%)"}),e.jsx(u,{type:"number",name:"pay_rate",min:"0",max:"100",value:l.pay_rate,onChange:f,placeholder:"Enter pay rate percentage (0-100)"})]})]}),e.jsxs(k,{children:[e.jsx(d,{color:"secondary",onClick:()=>j(!1),children:"Cancel"}),e.jsx(d,{color:"primary",onClick:D,children:"Create Leave Type"})]})]}),e.jsxs(w,{visible:R,onClose:()=>v(!1),children:[e.jsx(F,{children:e.jsx(U,{children:"Edit Leave Type"})}),e.jsxs(M,{children:[c&&e.jsx(b,{color:"danger",children:c}),e.jsxs("div",{className:"mb-3",children:[e.jsx(y,{children:"Leave Type Name"}),e.jsx(u,{type:"text",name:"name",value:n.name,onChange:g,placeholder:"Enter leave type name"})]}),e.jsxs("div",{className:"mb-3",children:[e.jsx(y,{children:"Leave Type"}),e.jsxs(S,{name:"type",value:n.type,onChange:g,children:[e.jsx("option",{value:"Paid",children:"Paid"}),e.jsx("option",{value:"Unpaid",children:"Unpaid"})]})]}),n.type==="Paid"&&e.jsxs("div",{className:"mb-3",children:[e.jsx(y,{children:"Pay Rate (%)"}),e.jsx(u,{type:"number",name:"pay_rate",min:"0",max:"100",value:n.pay_rate,onChange:g,placeholder:"Enter pay rate percentage (0-100)"})]})]}),e.jsxs(k,{children:[e.jsx(d,{color:"secondary",onClick:()=>v(!1),children:"Cancel"}),e.jsx(d,{color:"primary",onClick:H,children:"Save Changes"})]})]})]})};export{me as default};
