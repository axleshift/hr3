import{i as U,r as l,j as e,C as P,R as $}from"./index-BeQK1wQz.js";import{a as x}from"./api-b5EB9aEo.js";import{a as j,F as k,r as q,s as J}from"./index-DK7okQj2.js";import{C as K,a as Q}from"./CRow-DHngP2gz.js";import{C as W,a as X}from"./CCardBody-DMZ2Z-Eu.js";import{C as Y}from"./CCardHeader-CrwSQ86I.js";import{C as Z,a as _,b as S,c as o,d as ee,e as i}from"./CTable-BsqVm3QY.js";import{C as se,a as ae,b as te,c as re}from"./CModalTitle-BWAhGQ4B.js";import{C as B}from"./CInputGroup-BTtozhRw.js";import{C as N}from"./CInputGroupText-BWe1fkfT.js";import{C as D}from"./CFormSelect-BCsY-lP_.js";import{C as ne}from"./CFormInput-DQ9jesjs.js";import{C as le}from"./CModalFooter-BGk61Zal.js";import{a as w}from"./DefaultLayout-Bv7Siwyk.js";import"./index-xsH4HHeE.js";import"./CFormControlWrapper-B6QT_cF0.js";const Be=()=>{U();const[f,C]=l.useState(""),[g,v]=l.useState(""),[I,y]=l.useState("Active"),[ie,A]=l.useState([]),[F,E]=l.useState({}),[n,u]=l.useState(!1),[T,h]=l.useState(null),[H,m]=l.useState(!1),[b,M]=l.useState(null),R=["Pag-ibig","SSS","PhilHealth","13th Month Pay","Bonus"],G=[{value:"Active",label:"Active"},{value:"Inactive",label:"Inactive"}];l.useEffect(()=>{(async()=>{try{u(!0);const t=await x.get("/benefits?status=Active");A(t.data);const c=t.data.reduce((a,r)=>(a[r.employeeId]||(a[r.employeeId]=[]),a[r.employeeId].push(r),a),{});E(c)}catch(t){console.error("Error fetching benefits:",t),h("Failed to fetch benefits.")}finally{u(!1)}})()},[]);const O=async()=>{var t,c,a;if(!f||!g){h("Please select a benefit type and enter an amount.");return}u(!0),h(null);const s={type:f,amount:parseFloat(g),status:I||"Active"};try{if(b)await x.put(`/benefits/${b.id}`,s),alert("Benefit updated successfully!");else{const d=await x.post("/benefits",s);console.log("Success:",d.data),alert("Benefit applied successfully!")}const r=await x.get("/benefits?status=Active");A(r.data);const V=r.data.reduce((d,p)=>(d[p.employeeId]||(d[p.employeeId]=[]),d[p.employeeId].push(p),d),{});E(V),m(!1),C(""),v(""),y("Active"),M(null)}catch(r){console.error("Error:",((t=r.response)==null?void 0:t.data)||r.message),h(((a=(c=r.response)==null?void 0:c.data)==null?void 0:a.error)||"Failed to apply/update benefit.")}finally{u(!1)}},z=s=>{M(s),C(s.type),v(s.amount),y(s.status),m(!0)},L=s=>{switch(s){case"Active":return e.jsx(w,{color:"success",children:"Active"});case"Inactive":return e.jsx(w,{color:"danger",children:"Inactive"});default:return e.jsx(w,{color:"secondary",children:"Unknown"})}};return e.jsxs("div",{children:[n&&e.jsx("div",{className:"loading-overlay",children:e.jsx(P,{color:"primary",variant:"grow"})}),e.jsx(K,{children:e.jsx(Q,{xs:12,children:e.jsxs(W,{className:"mb-4",children:[e.jsxs(Y,{className:"d-flex justify-content-between align-items-center flex-wrap gap-2",children:[e.jsx("strong",{children:"Manage Employee Benefits"}),e.jsx("div",{className:"float-end",children:e.jsx(j,{color:"primary",onClick:()=>m(!0),disabled:n,children:e.jsx(k,{icon:q})})})]}),e.jsxs(X,{children:[T&&e.jsx("div",{className:"alert alert-danger mb-3",children:T}),e.jsxs(Z,{hover:!0,responsive:!0,children:[e.jsx(_,{children:e.jsxs(S,{children:[e.jsx(o,{children:"ID"}),e.jsx(o,{children:"Employee ID"}),e.jsx(o,{children:"Name"}),e.jsx(o,{children:"Benefit Type"}),e.jsx(o,{children:"Amount"}),e.jsx(o,{children:"Status"}),e.jsx(o,{children:"Actions"})]})}),e.jsx(ee,{children:Object.keys(F).length===0?e.jsx(S,{children:e.jsx(i,{colSpan:7,className:"text-center",children:"No benefits found"})}):Object.entries(F).map(([s,t],c)=>e.jsx($.Fragment,{children:t.map((a,r)=>e.jsxs(S,{children:[r===0&&e.jsxs(e.Fragment,{children:[e.jsx(i,{rowSpan:t.length,className:"text-center align-middle",children:c+1}),e.jsx(i,{rowSpan:t.length,className:"text-center align-middle",children:a.employeeId}),e.jsx(i,{rowSpan:t.length,className:"text-center align-middle",children:a.name})]}),e.jsx(i,{children:a.type}),e.jsxs(i,{children:["â‚±",parseFloat(a.amount).toLocaleString("en-PH",{minimumFractionDigits:2,maximumFractionDigits:2})]}),e.jsx(i,{children:L(a.status)}),e.jsx(i,{children:e.jsx(j,{color:"warning",size:"sm",onClick:()=>z(a),className:"me-2",disabled:n,children:e.jsx(k,{icon:J})})})]},a.id))},s))})]}),e.jsxs(se,{visible:H,onClose:()=>!n&&m(!1),children:[e.jsx(ae,{children:e.jsx(te,{children:b?"Edit Benefit":"Add New Benefit"})}),e.jsxs(re,{children:[e.jsxs(B,{className:"mb-3",children:[e.jsx(N,{children:"Benefit Type"}),e.jsxs(D,{value:f,onChange:s=>C(s.target.value),disabled:n,children:[e.jsx("option",{value:"",children:"Select benefit type"}),R.map((s,t)=>e.jsx("option",{value:s,children:s},t))]})]}),e.jsxs(B,{className:"mb-3",children:[e.jsx(N,{children:"Amount"}),e.jsx(ne,{type:"number",placeholder:"Enter amount",value:g,onChange:s=>v(s.target.value),disabled:n})]}),e.jsxs(B,{className:"mb-3",children:[e.jsx(N,{children:"Status"}),e.jsx(D,{value:I,onChange:s=>y(s.target.value),disabled:n,children:G.map(s=>e.jsx("option",{value:s.value,children:s.label},s.value))})]})]}),e.jsxs(le,{children:[e.jsx(j,{color:"secondary",onClick:()=>m(!1),disabled:n,children:"Cancel"}),e.jsx(j,{color:"primary",onClick:O,disabled:n,children:n?e.jsxs(e.Fragment,{children:[e.jsx(P,{component:"span",size:"sm","aria-hidden":"true"}),e.jsx("span",{className:"ms-2",children:"Processing..."})]}):"Submit"})]})]})]})]})})})]})};export{Be as default};
