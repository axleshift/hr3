import{r as t,j as e,C as ve,m as c}from"./index-CigHiWQn.js";import{a as d,F as u,w as De,x as we,y as Pe,z as Ee,A as _e}from"./index-BI0o2YC8.js";import{C as Be,a as Le}from"./CCardBody-DARvyBjI.js";import{C as Ne}from"./CCardHeader-B-oJUulG.js";import{C as A}from"./CFormSelect-Dyxd0eCG.js";import{C as Me,a as ke,b as Q,c as n,d as He,e as o}from"./CTable-CAy3aaOd.js";import{C as Ae,a as Te,b as Ve,c as Re,d as W}from"./DefaultLayout-DVCFUipS.js";import{C as D,a as w,b as P,c as E}from"./CModalTitle-C5OlhAh5.js";import{C as _}from"./CFormControlWrapper-V6BeYr5U.js";import{C as T}from"./CFormInput-BsQdVZMO.js";import{C as V}from"./CModalFooter-ToTeXNFu.js";const We=()=>{const[B,R]=t.useState([]),[Z,g]=t.useState([]),[ee,f]=t.useState(!0),[l,se]=t.useState(new Date().getMonth()+1),[i,Oe]=t.useState(new Date().getFullYear()),[y,ae]=t.useState("all"),[te,O]=t.useState([]),[I,re]=t.useState(new Date().toLocaleString("default",{month:"long"})),[L,b]=t.useState(!1),[N,J]=t.useState(""),[M,S]=t.useState(!1),[Y,$]=t.useState(0),[r,ne]=t.useState(null),[oe,C]=t.useState(!1),[k,q]=t.useState(""),[H,z]=t.useState(""),[G,m]=t.useState(""),[ie,le]=t.useState([]),[ce,de]=t.useState([]),[U,x]=t.useState(null),[he,X]=t.useState(!1),[me,F]=t.useState(!1),xe=async()=>{try{const s=await c.get("/api/job-positions");le(s.data)}catch(s){console.error("Error fetching job positions:",s),x("Failed to fetch job positions")}},je=async()=>{try{const s=await c.get("/api/departments");O(s.data)}catch(s){console.error("Error fetching departments:",s),x("Failed to fetch departments")}},j=async()=>{var s,a,h;try{f(!0),F(!1);const v=new URLSearchParams({year:i,month:l,calculate:!0}),p=await c.get(`/api/payrolls?${v.toString()}`);if(p.data&&p.data.length>0){R(p.data),g(p.data),F(!0);const Ce=[...new Set(p.data.map(Fe=>Fe.department))];O(Ce)}else R([]),g([]),F(!1)}catch(v){console.error("Error:",(s=v.response)==null?void 0:s.data),x(((h=(a=v.response)==null?void 0:a.data)==null?void 0:h.message)||"Failed to fetch payroll"),F(!1)}finally{f(!1)}};t.useEffect(()=>{console.log(`Fetching payroll for ${l}/${i}`),j(),je()},[l,i]),t.useEffect(()=>{g(y==="all"?B:B.filter(s=>s.department===y))},[y,B]);const pe=async()=>{var s,a;if(!k||!H){m("All fields are required");return}try{await c.post("/api/payrolls",{job_position:k,base_salary:parseFloat(H)}),C(!1),m(""),q(""),z(""),j()}catch(h){console.error("Error saving salary:",h),m(((a=(s=h.response)==null?void 0:s.data)==null?void 0:a.message)||"Failed to save salary")}};t.useEffect(()=>{xe(),j()},[i,l]),t.useEffect(()=>{re(new Date(i,l-1).toLocaleString("default",{month:"long"}))},[l,i]);const ue=async()=>{try{const s=await c.get("/api/rates");J(s.data.overtime_rate||"")}catch(s){console.error("Error fetching rates:",s),m("Failed to fetch overtime rate")}};t.useEffect(()=>{L&&ue()},[L]);const ge=async()=>{var s,a;if(!N){m("Overtime rate is required");return}try{await c.post("/api/rates",{overtime_rate:parseFloat(N)}),b(!1),m(""),j()}catch(h){m(((a=(s=h.response)==null?void 0:s.data)==null?void 0:a.message)||"Failed to save overtime rate")}},fe=async s=>{try{f(!0),ne(s);const a=await c.get("/api/benefits",{params:{employee_id:s.employee_id,year:i,month:l}});de(a.data),X(!0)}catch(a){console.error("Error fetching benefits:",a),x("Failed to fetch benefits data")}finally{f(!1)}},K=async(s,a)=>{try{await c.put(`/api/payrolls/${s}`,{status:a}),j()}catch(h){console.error("Error updating status:",h),x("Failed to update payroll status")}},ye=async()=>{try{await c.post("/api/bonus",{year:i,month:l,bonus:parseFloat(Y)}),S(!1),j()}catch(s){console.error("Error saving bonus:",s),x("Failed to save bonus")}},be=async()=>{var s;try{const a=await c.get("/api/payrolls",{params:{year:i,month:l}});$(((s=a.data)==null?void 0:s.bonus)||0)}catch(a){console.error("Error fetching bonus:",a),x("Failed to fetch bonus data")}};t.useEffect(()=>{M&&be()},[M]),Array.from({length:new Date().getFullYear()-2020+1},(s,a)=>2020+a);const Se=s=>{switch((s==null?void 0:s.toLowerCase())||"pending"){case"pending":return"warning";case"paid":return"success";default:return"secondary"}};return e.jsxs("div",{children:[e.jsxs(Be,{children:[e.jsxs(Ne,{className:"d-flex justify-content-between align-items-center flex-wrap",children:[e.jsx("strong",{children:"Employee Payroll"}),e.jsxs("div",{className:"d-flex flex-wrap gap-2",children:[e.jsx(A,{value:l,onChange:s=>se(Number(s.target.value)),style:{width:"120px"},children:Array.from({length:12},(s,a)=>e.jsx("option",{value:a+1,children:new Date(2023,a).toLocaleString("default",{month:"long"})},a+1))}),e.jsxs(A,{value:y,onChange:s=>ae(s.target.value),style:{width:"150px"},children:[e.jsx("option",{value:"all",children:"All Departments"}),te.map((s,a)=>e.jsx("option",{value:s,children:s},a))]}),e.jsx(d,{color:"primary",onClick:()=>b(!0),children:e.jsx(u,{icon:De})}),e.jsx(d,{color:"primary",onClick:()=>S(!0),children:e.jsx(u,{icon:we})}),e.jsx(d,{color:"info",onClick:()=>C(!0),children:e.jsx(u,{icon:Pe})})]})]}),e.jsx(Le,{children:ee?e.jsxs("div",{className:"text-center py-5",children:[e.jsx(ve,{color:"primary"}),e.jsx("p",{className:"mt-2",children:"Loading payroll data..."})]}):U?e.jsxs("div",{className:"text-center py-5 text-danger",children:[e.jsx("h5",{children:"Error loading data"}),e.jsx("p",{children:U})]}):me?e.jsx("div",{className:"table-responsive",children:e.jsxs(Me,{hover:!0,responsive:!0,children:[e.jsx(ke,{children:e.jsxs(Q,{children:[e.jsx(n,{children:"#"}),e.jsx(n,{children:"ID"}),e.jsx(n,{children:"Name"}),e.jsx(n,{children:"Department"}),e.jsx(n,{children:"Job Position"}),e.jsx(n,{children:"Base Salary"}),e.jsx(n,{children:"Overtime"}),e.jsx(n,{children:"Tax"}),e.jsx(n,{children:"Benefits"}),e.jsx(n,{children:"Bonus"}),e.jsx(n,{children:"Net Salary"}),e.jsx(n,{children:"Status"}),e.jsx(n,{children:"Action"})]})}),e.jsx(He,{children:Z.map(s=>{const a=s.status||"Pending";return e.jsxs(Q,{children:[e.jsx(o,{children:s.id}),e.jsx(o,{children:s.employee_id}),e.jsx(o,{children:s.name}),e.jsx(o,{children:s.department}),e.jsx(o,{children:s.job_position}),e.jsx(o,{children:parseFloat(s.base_salary||0).toLocaleString()}),e.jsx(o,{children:parseFloat(s.total_overtime_amount||0).toFixed(2)}),e.jsxs(o,{children:["₱",parseFloat(s.tax||0).toLocaleString("en-PH",{minimumFractionDigits:2,maximumFractionDigits:2})]}),e.jsx(o,{children:parseFloat(s.benefits_total||0).toLocaleString()}),e.jsx(o,{children:parseFloat(s.bonus||0).toFixed(2)}),e.jsx(o,{children:parseFloat(s.net_salary||0).toLocaleString()}),e.jsx(o,{children:e.jsx(Ae,{color:Se(a),children:a})}),e.jsxs(o,{children:[e.jsx(d,{color:"secondary",onClick:()=>fe(s),children:e.jsx(u,{icon:Ee})}),e.jsxs(Te,{children:[e.jsx(Ve,{color:"link",size:"sm",children:e.jsx(u,{icon:_e})}),e.jsxs(Re,{children:[e.jsx(W,{onClick:()=>K(s.id,"Paid"),disabled:a==="Paid",children:"Paid"}),e.jsx(W,{onClick:()=>K(s.id,"Pending"),disabled:a==="Pending",children:"Pending"})]})]})]})]},s.employee_id)})})]})}):e.jsx("div",{className:"text-center py-5",children:e.jsx("p",{children:"No attendance records found"})})})]}),e.jsxs(D,{visible:L,onClose:()=>b(!1),children:[e.jsx(w,{children:e.jsx(P,{children:"Set Overtime Rate"})}),e.jsxs(E,{children:[e.jsx(_,{children:"Overtime Rate (per hour)"}),e.jsx(T,{type:"number",value:N,onChange:s=>J(s.target.value),placeholder:"Enter overtime rate"})]}),e.jsxs(V,{children:[e.jsx(d,{color:"secondary",onClick:()=>b(!1),children:"Close"}),e.jsx(d,{color:"primary",onClick:ge,children:"Save Rate"})]})]}),e.jsxs(D,{visible:M,onClose:()=>S(!1),children:[e.jsx(w,{children:e.jsx(P,{children:"Set Bonus"})}),e.jsxs(E,{children:[e.jsx(_,{children:"Bonus"}),e.jsx(T,{type:"number",value:Y,onChange:s=>$(parseFloat(s.target.value)),placeholder:"Enter bonus"})]}),e.jsxs(V,{children:[e.jsx(d,{color:"secondary",onClick:()=>S(!1),children:"Close"}),e.jsx(d,{color:"primary",onClick:ye,children:"Save"})]})]}),e.jsxs(D,{visible:oe,onClose:()=>C(!1),children:[e.jsx(w,{children:e.jsx(P,{children:"Manage Salaries"})}),e.jsxs(E,{children:[G&&e.jsx("div",{className:"alert alert-danger",children:G}),e.jsx(_,{children:"Job Position"}),e.jsxs(A,{value:k,onChange:s=>q(s.target.value),placeholder:"Select job position",children:[e.jsx("option",{value:"",children:"Select a job position"}),ie.map((s,a)=>e.jsx("option",{value:s,children:s},a))]}),e.jsx(_,{className:"mt-3",children:"Base Salary"}),e.jsx(T,{type:"number",value:H,onChange:s=>z(s.target.value),placeholder:"Enter base salary"})]}),e.jsxs(V,{children:[e.jsx(d,{color:"secondary",onClick:()=>C(!1),children:"Close"}),e.jsx(d,{color:"primary",onClick:pe,children:"Save Salary"})]})]}),e.jsxs(D,{visible:he,onClose:()=>X(!1),size:"lg",children:[e.jsx(w,{closeButton:!0,children:e.jsxs(P,{children:["Payslip for ",r==null?void 0:r.name]})}),e.jsx(E,{children:r&&e.jsxs(e.Fragment,{children:[e.jsxs("div",{className:"mb-4",children:[e.jsxs("p",{children:[e.jsx("strong",{children:"Date Period:"})," ",I," 1, ",i," – ",I," 30,"," ",i]}),e.jsxs("p",{children:[e.jsx("strong",{children:"Employee Name:"})," ",r.name]}),e.jsxs("p",{children:[e.jsx("strong",{children:"Employee ID:"})," ",r.employee_id]}),e.jsxs("p",{children:[e.jsx("strong",{children:"Department:"})," ",r.department]}),e.jsxs("p",{children:[e.jsx("strong",{children:"Position:"})," ",r.job_position]})]}),e.jsx("div",{className:"table-responsive",style:{overflowX:"auto"},children:e.jsxs("table",{className:"table table-bordered",children:[e.jsx("thead",{children:e.jsxs("tr",{children:[e.jsx("th",{children:"Earnings"}),e.jsx("th",{children:"Amount"}),e.jsx("th",{children:"Deductions"}),e.jsx("th",{children:"Amount"})]})}),e.jsxs("tbody",{children:[e.jsxs("tr",{children:[e.jsx("td",{children:"Base Salary"}),e.jsxs("td",{children:["₱",parseFloat(r.base_salary||0).toLocaleString("en-PH",{minimumFractionDigits:2,maximumFractionDigits:2})]}),e.jsx("td",{children:"Tax"}),e.jsxs("td",{children:["₱",parseFloat(r.tax||0).toLocaleString("en-PH",{minimumFractionDigits:2,maximumFractionDigits:2})]})]}),e.jsxs("tr",{children:[e.jsx("td",{children:"Overtime Pay"}),e.jsxs("td",{children:["₱",parseFloat(r.total_overtime_amount||0).toLocaleString("en-PH",{minimumFractionDigits:2,maximumFractionDigits:2})]}),e.jsx("td",{colSpan:"2"})]}),e.jsxs("tr",{children:[e.jsx("td",{children:"Bonus"}),e.jsxs("td",{children:["₱",parseFloat(r.bonus||0).toLocaleString("en-PH",{minimumFractionDigits:2,maximumFractionDigits:2})]})]}),ce.map((s,a)=>e.jsxs("tr",{children:[e.jsx("td",{colSpan:"2"}),e.jsx("td",{children:s.type}),e.jsxs("td",{children:["₱",parseFloat(s.amount||0).toLocaleString("en-PH",{minimumFractionDigits:2,maximumFractionDigits:2})]})]},a)),e.jsxs("tr",{children:[e.jsx("th",{children:"Gross Salary"}),e.jsxs("th",{children:["₱",(parseFloat(r.base_salary||0)+parseFloat(r.total_overtime_amount||0)+parseFloat(r.bonus||0)).toLocaleString("en-PH",{minimumFractionDigits:2,maximumFractionDigits:2})]}),e.jsx("th",{children:"Total Deductions"}),e.jsxs("th",{children:["₱",(parseFloat(r.tax||0)+parseFloat(r.benefits_total||0)).toLocaleString("en-PH",{minimumFractionDigits:2,maximumFractionDigits:2})]})]}),e.jsxs("tr",{children:[e.jsx("th",{children:"Net Pay"}),e.jsxs("th",{colSpan:"3",children:["₱",(parseFloat(r.base_salary||0)+parseFloat(r.total_overtime_amount||0)+parseFloat(r.bonus||0)-parseFloat(r.tax||0)-parseFloat(r.benefits_total||0)).toLocaleString("en-PH",{minimumFractionDigits:2,maximumFractionDigits:2})]})]})]})]})})]})})]})]})};export{We as default};
