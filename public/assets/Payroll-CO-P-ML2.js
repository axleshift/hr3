import{r as t,j as e,C as ge,a as h}from"./index-D5jCKoxG.js";import{b as c,F as u,h as fe,i as ye,j as be,k as Se,l as Ce}from"./Compliance-BrJnQCr2.js";import{C as Fe,a as ve}from"./CCardBody-BXocfgBq.js";import{C as De}from"./CCardHeader-Bqc1h0_P.js";import{C as L}from"./CFormSelect-CTqTi1AW.js";import{C as Pe,a as we,b as z,c as o,d as _e,e as n}from"./CTable-BGZJ4gYh.js";import{C as Ee,a as Be,b as Ne,c as Le,d as G}from"./DefaultLayout-BXedjd1z.js";import{C as S,a as C,b as F,c as v}from"./CModalTitle-BaqLV3PZ.js";import{C as D}from"./CFormControlWrapper-Bkm-FHdO.js";import{C as M}from"./CFormInput-C7PNUlW7.js";import{C as k}from"./CModalFooter-DbcBg1UB.js";const $e=()=>{const[U,X]=t.useState([]),[K,p]=t.useState(!0),[l,Q]=t.useState(new Date().getMonth()+1),[i,W]=t.useState(new Date().getFullYear()),[H,Z]=t.useState(new Date().toLocaleString("default",{month:"long"})),[P,g]=t.useState(!1),[w,T]=t.useState(""),[_,f]=t.useState(!1),[V,R]=t.useState(0),[r,ee]=t.useState(null),[se,y]=t.useState(!1),[E,A]=t.useState(""),[B,I]=t.useState(""),[O,x]=t.useState(""),[ae,te]=t.useState([]),[re,oe]=t.useState([]),[J,m]=t.useState(null),[ne,Y]=t.useState(!1),[ie,N]=t.useState(!1),le=async()=>{try{const s=await h.get("/api/job-positions");te(s.data)}catch(s){console.error("Error fetching job positions:",s),m("Failed to fetch job positions")}},j=async()=>{var s,a,d;try{p(!0),N(!1);const b=new URLSearchParams({year:i,month:l,calculate:!0}),q=await h.get(`/api/payrolls?${b.toString()}`);X(q.data),N(q.data.length>0)}catch(b){console.error("Error:",(s=b.response)==null?void 0:s.data),m(((d=(a=b.response)==null?void 0:a.data)==null?void 0:d.message)||"Failed to fetch payroll"),N(!1)}finally{p(!1)}};t.useEffect(()=>{console.log(`Fetching payroll for ${l}/${i}`),j()},[l,i]);const ce=async()=>{var s,a;if(!E||!B){x("All fields are required");return}try{await h.post("/api/payrolls",{job_position:E,base_salary:parseFloat(B)}),y(!1),x(""),A(""),I(""),j()}catch(d){console.error("Error saving salary:",d),x(((a=(s=d.response)==null?void 0:s.data)==null?void 0:a.message)||"Failed to save salary")}};t.useEffect(()=>{le(),j()},[i,l]),t.useEffect(()=>{Z(new Date(i,l-1).toLocaleString("default",{month:"long"}))},[l,i]);const de=async()=>{try{const s=await h.get("/api/rates");T(s.data.overtime_rate||"")}catch(s){console.error("Error fetching rates:",s),x("Failed to fetch overtime rate")}};t.useEffect(()=>{P&&de()},[P]);const he=async()=>{var s,a;if(!w){x("Overtime rate is required");return}try{await h.post("/api/rates",{overtime_rate:parseFloat(w)}),g(!1),x(""),j()}catch(d){x(((a=(s=d.response)==null?void 0:s.data)==null?void 0:a.message)||"Failed to save overtime rate")}},xe=async s=>{try{p(!0),ee(s);const a=await h.get("/api/benefits",{params:{employee_id:s.employee_id,year:i,month:l}});oe(a.data),Y(!0)}catch(a){console.error("Error fetching benefits:",a),m("Failed to fetch benefits data")}finally{p(!1)}},$=async(s,a)=>{try{await h.put(`/api/payrolls/${s}`,{status:a}),j()}catch(d){console.error("Error updating status:",d),m("Failed to update payroll status")}},me=async()=>{try{await h.post("/api/bonus",{year:i,month:l,bonus:parseFloat(V)}),f(!1),j()}catch(s){console.error("Error saving bonus:",s),m("Failed to save bonus")}},je=async()=>{var s;try{const a=await h.get("/api/payrolls",{params:{year:i,month:l}});R(((s=a.data)==null?void 0:s.bonus)||0)}catch(a){console.error("Error fetching bonus:",a),m("Failed to fetch bonus data")}};t.useEffect(()=>{_&&je()},[_]);const ue=Array.from({length:new Date().getFullYear()-2020+1},(s,a)=>2020+a),pe=s=>{switch((s==null?void 0:s.toLowerCase())||"pending"){case"pending":return"warning";case"paid":return"success";default:return"secondary"}};return e.jsxs("div",{children:[e.jsxs(Fe,{children:[e.jsxs(De,{className:"d-flex justify-content-between align-items-center flex-wrap",children:[e.jsx("strong",{children:"Employee Payroll"}),e.jsxs("div",{className:"d-flex flex-wrap gap-2",children:[e.jsx(L,{value:l,onChange:s=>Q(Number(s.target.value)),style:{width:"120px"},children:Array.from({length:12},(s,a)=>e.jsx("option",{value:a+1,children:new Date(2023,a).toLocaleString("default",{month:"long"})},a+1))}),e.jsx(L,{value:i,onChange:s=>W(parseInt(s.target.value)),style:{width:"90px"},children:ue.map(s=>e.jsx("option",{value:s,children:s},s))}),e.jsx(c,{color:"primary",onClick:()=>g(!0),children:e.jsx(u,{icon:fe})}),e.jsx(c,{color:"primary",onClick:()=>f(!0),children:e.jsx(u,{icon:ye})}),e.jsx(c,{color:"info",onClick:()=>y(!0),children:e.jsx(u,{icon:be})})]})]}),e.jsx(ve,{children:K?e.jsxs("div",{className:"text-center py-5",children:[e.jsx(ge,{color:"primary"}),e.jsx("p",{className:"mt-2",children:"Loading payroll data..."})]}):J?e.jsxs("div",{className:"text-center py-5 text-danger",children:[e.jsx("h5",{children:"Error loading data"}),e.jsx("p",{children:J})]}):ie?e.jsx("div",{className:"table-responsive",children:e.jsxs(Pe,{hover:!0,responsive:!0,children:[e.jsx(we,{children:e.jsxs(z,{children:[e.jsx(o,{children:"#"}),e.jsx(o,{children:"ID"}),e.jsx(o,{children:"Name"}),e.jsx(o,{children:"Department"}),e.jsx(o,{children:"Job Position"}),e.jsx(o,{children:"Base Salary"}),e.jsx(o,{children:"Overtime"}),e.jsx(o,{children:"Tax"}),e.jsx(o,{children:"Benefits"}),e.jsx(o,{children:"Bonus"}),e.jsx(o,{children:"Net Salary"}),e.jsx(o,{children:"Status"}),e.jsx(o,{children:"Action"})]})}),e.jsx(_e,{children:U.map(s=>{const a=s.status||"Pending";return e.jsxs(z,{children:[e.jsx(n,{children:s.id}),e.jsx(n,{children:s.employee_id}),e.jsx(n,{children:s.name}),e.jsx(n,{children:s.department}),e.jsx(n,{children:s.job_position}),e.jsx(n,{children:parseFloat(s.base_salary||0).toLocaleString()}),e.jsx(n,{children:parseFloat(s.total_overtime_amount||0).toFixed(2)}),e.jsxs(n,{children:["₱",parseFloat(s.tax||0).toLocaleString("en-PH",{minimumFractionDigits:2,maximumFractionDigits:2})]}),e.jsx(n,{children:parseFloat(s.benefits_total||0).toLocaleString()}),e.jsx(n,{children:parseFloat(s.bonus||0).toFixed(2)}),e.jsx(n,{children:parseFloat(s.net_salary||0).toLocaleString()}),e.jsx(n,{children:e.jsx(Ee,{color:pe(a),children:a})}),e.jsxs(n,{children:[e.jsx(c,{color:"secondary",onClick:()=>xe(s),children:e.jsx(u,{icon:Se})}),e.jsxs(Be,{children:[e.jsx(Ne,{color:"link",size:"sm",children:e.jsx(u,{icon:Ce})}),e.jsxs(Le,{children:[e.jsx(G,{onClick:()=>$(s.id,"Paid"),disabled:a==="Paid",children:"Paid"}),e.jsx(G,{onClick:()=>$(s.id,"Pending"),disabled:a==="Pending",children:"Pending"})]})]})]})]},s.employee_id)})})]})}):e.jsx("div",{className:"text-center py-5",children:e.jsx("p",{children:"No attendance records found"})})})]}),e.jsxs(S,{visible:P,onClose:()=>g(!1),children:[e.jsx(C,{children:e.jsx(F,{children:"Set Overtime Rate"})}),e.jsxs(v,{children:[e.jsx(D,{children:"Overtime Rate (per hour)"}),e.jsx(M,{type:"number",value:w,onChange:s=>T(s.target.value),placeholder:"Enter overtime rate"})]}),e.jsxs(k,{children:[e.jsx(c,{color:"secondary",onClick:()=>g(!1),children:"Close"}),e.jsx(c,{color:"primary",onClick:he,children:"Save Rate"})]})]}),e.jsxs(S,{visible:_,onClose:()=>f(!1),children:[e.jsx(C,{children:e.jsx(F,{children:"Set Bonus"})}),e.jsxs(v,{children:[e.jsx(D,{className:"mt-3",children:"Bonus"}),e.jsx(M,{type:"number",value:V,onChange:s=>R(parseFloat(s.target.value)),placeholder:"Enter bonus"})]}),e.jsxs(k,{children:[e.jsx(c,{color:"secondary",onClick:()=>f(!1),children:"Close"}),e.jsx(c,{color:"primary",onClick:me,children:"Save"})]})]}),e.jsxs(S,{visible:se,onClose:()=>y(!1),children:[e.jsx(C,{children:e.jsx(F,{children:"Manage Salaries"})}),e.jsxs(v,{children:[O&&e.jsx("div",{className:"alert alert-danger",children:O}),e.jsx(D,{children:"Job Position"}),e.jsxs(L,{value:E,onChange:s=>A(s.target.value),placeholder:"Select job position",children:[e.jsx("option",{value:"",children:"Select a job position"}),ae.map((s,a)=>e.jsx("option",{value:s,children:s},a))]}),e.jsx(D,{className:"mt-3",children:"Base Salary"}),e.jsx(M,{type:"number",value:B,onChange:s=>I(s.target.value),placeholder:"Enter base salary"})]}),e.jsxs(k,{children:[e.jsx(c,{color:"secondary",onClick:()=>y(!1),children:"Close"}),e.jsx(c,{color:"primary",onClick:ce,children:"Save Salary"})]})]}),e.jsxs(S,{visible:ne,onClose:()=>Y(!1),size:"lg",children:[e.jsx(C,{closeButton:!0,children:e.jsxs(F,{children:["Payslip for ",r==null?void 0:r.name]})}),e.jsx(v,{children:r&&e.jsxs(e.Fragment,{children:[e.jsxs("div",{className:"mb-4",children:[e.jsxs("p",{children:[e.jsx("strong",{children:"Date Period:"})," ",H," 1, ",i," – ",H," 30,"," ",i]}),e.jsxs("p",{children:[e.jsx("strong",{children:"Employee Name:"})," ",r.name]}),e.jsxs("p",{children:[e.jsx("strong",{children:"Employee ID:"})," ",r.employee_id]}),e.jsxs("p",{children:[e.jsx("strong",{children:"Position:"})," ",r.job_position]})]}),e.jsx("div",{className:"table-responsive",style:{overflowX:"auto"},children:e.jsxs("table",{className:"table table-bordered",children:[e.jsx("thead",{children:e.jsxs("tr",{children:[e.jsx("th",{children:"Earnings"}),e.jsx("th",{children:"Amount"}),e.jsx("th",{children:"Deductions"}),e.jsx("th",{children:"Amount"})]})}),e.jsxs("tbody",{children:[e.jsxs("tr",{children:[e.jsx("td",{children:"Base Salary"}),e.jsxs("td",{children:["₱",parseFloat(r.base_salary||0).toLocaleString("en-PH",{minimumFractionDigits:2,maximumFractionDigits:2})]}),e.jsx("td",{children:"Tax"}),e.jsxs("td",{children:["₱",parseFloat(r.tax||0).toLocaleString("en-PH",{minimumFractionDigits:2,maximumFractionDigits:2})]})]}),e.jsxs("tr",{children:[e.jsx("td",{children:"Overtime Pay"}),e.jsxs("td",{children:["₱",parseFloat(r.total_overtime_amount||0).toLocaleString("en-PH",{minimumFractionDigits:2,maximumFractionDigits:2})]}),e.jsx("td",{colSpan:"2"})]}),e.jsxs("tr",{children:[e.jsx("td",{children:"Bonus"}),e.jsxs("td",{children:["₱",parseFloat(r.bonus||0).toLocaleString("en-PH",{minimumFractionDigits:2,maximumFractionDigits:2})]})]}),re.map((s,a)=>e.jsxs("tr",{children:[e.jsx("td",{colSpan:"2"}),e.jsx("td",{children:s.type}),e.jsxs("td",{children:["₱",parseFloat(s.amount||0).toLocaleString("en-PH",{minimumFractionDigits:2,maximumFractionDigits:2})]})]},a)),e.jsxs("tr",{children:[e.jsx("th",{children:"Gross Salary"}),e.jsxs("th",{children:["₱",(parseFloat(r.base_salary||0)+parseFloat(r.total_overtime_amount||0)+parseFloat(r.bonus||0)).toLocaleString("en-PH",{minimumFractionDigits:2,maximumFractionDigits:2})]}),e.jsx("th",{children:"Total Deductions"}),e.jsxs("th",{children:["₱",(parseFloat(r.tax||0)+parseFloat(r.benefits_total||0)).toLocaleString("en-PH",{minimumFractionDigits:2,maximumFractionDigits:2})]})]}),e.jsxs("tr",{children:[e.jsx("th",{children:"Net Pay"}),e.jsxs("th",{colSpan:"3",children:["₱",(parseFloat(r.base_salary||0)+parseFloat(r.total_overtime_amount||0)+parseFloat(r.bonus||0)-parseFloat(r.tax||0)-parseFloat(r.benefits_total||0)).toLocaleString("en-PH",{minimumFractionDigits:2,maximumFractionDigits:2})]})]})]})]})})]})})]})]})};export{$e as default};
