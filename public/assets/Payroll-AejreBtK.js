import{r as a,j as e,C as ve,m as c}from"./index-C-CfVmPw.js";import{a as d,F as p,w as De,x as we,y as Pe,z as Ee,A as _e}from"./index-CKSFvYFv.js";import{C as Be,a as Le}from"./CCardBody-Ch0R1cF9.js";import{C as Ne}from"./CCardHeader-vtYWuQ7t.js";import{C as A}from"./CFormSelect-BiRx6lQw.js";import{C as Me,a as ke,b as K,c as n,d as He,e as o}from"./CTable-BbR99loI.js";import{C as Ae,a as Te,b as Ve,c as Re,d as Q}from"./DefaultLayout-CZ5hUmOE.js";import{C as F,a as v,b as D,c as w}from"./CModalTitle-Dw4Dm_Q2.js";import{C as P}from"./CFormControlWrapper-B3u9GADN.js";import{C as T}from"./CFormInput-CE0uwUqH.js";import{C as V}from"./CModalFooter-CA2gniUv.js";const We=()=>{const[E,W]=a.useState([]),[Z,_]=a.useState([]),[ee,u]=a.useState(!0),[l,se]=a.useState(new Date().getMonth()+1),[i,Oe]=a.useState(new Date().getFullYear()),[g,te]=a.useState("all"),[ae,R]=a.useState([]),[O,re]=a.useState(new Date().toLocaleString("default",{month:"long"})),[B,f]=a.useState(!1),[L,I]=a.useState(""),[N,y]=a.useState(!1),[J,Y]=a.useState(0),[r,ne]=a.useState(null),[oe,b]=a.useState(!1),[M,$]=a.useState(""),[k,q]=a.useState(""),[z,m]=a.useState(""),[ie,le]=a.useState([]),[ce,de]=a.useState([]),[G,x]=a.useState(null),[he,U]=a.useState(!1),[me,H]=a.useState(!1),xe=async()=>{try{const s=await c.get("/api/job-positions");le(s.data)}catch(s){console.error("Error fetching job positions:",s),x("Failed to fetch job positions")}},je=async()=>{try{const s=await c.get("/api/departments");R(s.data)}catch(s){console.error("Error fetching departments:",s),x("Failed to fetch departments")}},j=async()=>{var s,t,h;try{u(!0),H(!1);const S=new URLSearchParams({year:i,month:l,calculate:!0}),C=await c.get(`/api/payrolls?${S.toString()}`);W(C.data),_(C.data),H(C.data.length>0);const Ce=[...new Set(C.data.map(Fe=>Fe.department))];R(Ce)}catch(S){console.error("Error:",(s=S.response)==null?void 0:s.data),x(((h=(t=S.response)==null?void 0:t.data)==null?void 0:h.message)||"Failed to fetch payroll"),H(!1)}finally{u(!1)}};a.useEffect(()=>{console.log(`Fetching payroll for ${l}/${i}`),j(),je()},[l,i]),a.useEffect(()=>{_(g==="all"?E:E.filter(s=>s.department===g))},[g,E]);const pe=async()=>{var s,t;if(!M||!k){m("All fields are required");return}try{await c.post("/api/payrolls",{job_position:M,base_salary:parseFloat(k)}),b(!1),m(""),$(""),q(""),j()}catch(h){console.error("Error saving salary:",h),m(((t=(s=h.response)==null?void 0:s.data)==null?void 0:t.message)||"Failed to save salary")}};a.useEffect(()=>{xe(),j()},[i,l]),a.useEffect(()=>{re(new Date(i,l-1).toLocaleString("default",{month:"long"}))},[l,i]);const ue=async()=>{try{const s=await c.get("/api/rates");I(s.data.overtime_rate||"")}catch(s){console.error("Error fetching rates:",s),m("Failed to fetch overtime rate")}};a.useEffect(()=>{B&&ue()},[B]);const ge=async()=>{var s,t;if(!L){m("Overtime rate is required");return}try{await c.put("/api/rates/overtime",{rate:parseFloat(L)}),f(!1),m(""),j()}catch(h){m(((t=(s=h.response)==null?void 0:s.data)==null?void 0:t.message)||"Failed to save overtime rate")}},fe=async s=>{try{u(!0),ne(s);const t=await c.get("/api/benefits",{params:{employee_id:s.employee_id,year:i,month:l}});de(t.data),U(!0)}catch(t){console.error("Error fetching benefits:",t),x("Failed to fetch benefits data")}finally{u(!1)}},X=async(s,t)=>{try{await c.put(`/api/payrolls/${s}`,{status:t}),j()}catch(h){console.error("Error updating status:",h),x("Failed to update payroll status")}},ye=async()=>{try{await c.post("/api/bonus",{year:i,month:l,bonus:parseFloat(J)}),y(!1),j()}catch(s){console.error("Error saving bonus:",s),x("Failed to save bonus")}},be=async()=>{var s;try{const t=await c.get("/api/payrolls",{params:{year:i,month:l}});Y(((s=t.data)==null?void 0:s.bonus)||0)}catch(t){console.error("Error fetching bonus:",t),x("Failed to fetch bonus data")}};a.useEffect(()=>{N&&be()},[N]),Array.from({length:new Date().getFullYear()-2020+1},(s,t)=>2020+t);const Se=s=>{switch((s==null?void 0:s.toLowerCase())||"pending"){case"pending":return"warning";case"paid":return"success";default:return"secondary"}};return e.jsxs("div",{children:[e.jsxs(Be,{children:[e.jsxs(Ne,{className:"d-flex justify-content-between align-items-center flex-wrap",children:[e.jsx("strong",{children:"Employee Payroll"}),e.jsxs("div",{className:"d-flex flex-wrap gap-2",children:[e.jsx(A,{value:l,onChange:s=>se(Number(s.target.value)),style:{width:"120px"},children:Array.from({length:12},(s,t)=>e.jsx("option",{value:t+1,children:new Date(2023,t).toLocaleString("default",{month:"long"})},t+1))}),e.jsxs(A,{value:g,onChange:s=>te(s.target.value),style:{width:"150px"},children:[e.jsx("option",{value:"all",children:"All Departments"}),ae.map((s,t)=>e.jsx("option",{value:s,children:s},t))]}),e.jsx(d,{color:"primary",onClick:()=>f(!0),children:e.jsx(p,{icon:De})}),e.jsx(d,{color:"primary",onClick:()=>y(!0),children:e.jsx(p,{icon:we})}),e.jsx(d,{color:"info",onClick:()=>b(!0),children:e.jsx(p,{icon:Pe})})]})]}),e.jsx(Le,{children:ee?e.jsxs("div",{className:"text-center py-5",children:[e.jsx(ve,{color:"primary"}),e.jsx("p",{className:"mt-2",children:"Loading payroll data..."})]}):G?e.jsxs("div",{className:"text-center py-5 text-danger",children:[e.jsx("h5",{children:"Error loading data"}),e.jsx("p",{children:G})]}):me?e.jsx("div",{className:"table-responsive",children:e.jsxs(Me,{hover:!0,responsive:!0,children:[e.jsx(ke,{children:e.jsxs(K,{children:[e.jsx(n,{children:"#"}),e.jsx(n,{children:"ID"}),e.jsx(n,{children:"Name"}),e.jsx(n,{children:"Department"}),e.jsx(n,{children:"Job Position"}),e.jsx(n,{children:"Base Salary"}),e.jsx(n,{children:"Overtime"}),e.jsx(n,{children:"Tax"}),e.jsx(n,{children:"Benefits"}),e.jsx(n,{children:"Bonus"}),e.jsx(n,{children:"Net Salary"}),e.jsx(n,{children:"Status"}),e.jsx(n,{children:"Action"})]})}),e.jsx(He,{children:Z.map(s=>{const t=s.status||"Pending";return e.jsxs(K,{children:[e.jsx(o,{children:s.id}),e.jsx(o,{children:s.employee_id}),e.jsx(o,{children:s.name}),e.jsx(o,{children:s.department}),e.jsx(o,{children:s.job_position}),e.jsx(o,{children:parseFloat(s.base_salary||0).toLocaleString()}),e.jsx(o,{children:parseFloat(s.total_overtime_amount||0).toFixed(2)}),e.jsxs(o,{children:["₱",parseFloat(s.tax||0).toLocaleString("en-PH",{minimumFractionDigits:2,maximumFractionDigits:2})]}),e.jsx(o,{children:parseFloat(s.benefits_total||0).toLocaleString()}),e.jsx(o,{children:parseFloat(s.bonus||0).toFixed(2)}),e.jsx(o,{children:parseFloat(s.net_salary||0).toLocaleString()}),e.jsx(o,{children:e.jsx(Ae,{color:Se(t),children:t})}),e.jsxs(o,{children:[e.jsx(d,{color:"secondary",onClick:()=>fe(s),children:e.jsx(p,{icon:Ee})}),e.jsxs(Te,{children:[e.jsx(Ve,{color:"link",size:"sm",children:e.jsx(p,{icon:_e})}),e.jsxs(Re,{children:[e.jsx(Q,{onClick:()=>X(s.id,"Paid"),disabled:t==="Paid",children:"Paid"}),e.jsx(Q,{onClick:()=>X(s.id,"Pending"),disabled:t==="Pending",children:"Pending"})]})]})]})]},s.employee_id)})})]})}):e.jsx("div",{className:"text-center py-5",children:e.jsx("p",{children:"No attendance records found"})})})]}),e.jsxs(F,{visible:B,onClose:()=>f(!1),children:[e.jsx(v,{children:e.jsx(D,{children:"Set Overtime Rate"})}),e.jsxs(w,{children:[e.jsx(P,{children:"Overtime Rate (per hour)"}),e.jsx(T,{type:"number",value:L,onChange:s=>I(s.target.value),placeholder:"Enter overtime rate"})]}),e.jsxs(V,{children:[e.jsx(d,{color:"secondary",onClick:()=>f(!1),children:"Close"}),e.jsx(d,{color:"primary",onClick:ge,children:"Save Rate"})]})]}),e.jsxs(F,{visible:N,onClose:()=>y(!1),children:[e.jsx(v,{children:e.jsx(D,{children:"Set Bonus"})}),e.jsxs(w,{children:[e.jsx(P,{children:"Bonus"}),e.jsx(T,{type:"number",value:J,onChange:s=>Y(parseFloat(s.target.value)),placeholder:"Enter bonus"})]}),e.jsxs(V,{children:[e.jsx(d,{color:"secondary",onClick:()=>y(!1),children:"Close"}),e.jsx(d,{color:"primary",onClick:ye,children:"Save"})]})]}),e.jsxs(F,{visible:oe,onClose:()=>b(!1),children:[e.jsx(v,{children:e.jsx(D,{children:"Manage Salaries"})}),e.jsxs(w,{children:[z&&e.jsx("div",{className:"alert alert-danger",children:z}),e.jsx(P,{children:"Job Position"}),e.jsxs(A,{value:M,onChange:s=>$(s.target.value),placeholder:"Select job position",children:[e.jsx("option",{value:"",children:"Select a job position"}),ie.map((s,t)=>e.jsx("option",{value:s,children:s},t))]}),e.jsx(P,{className:"mt-3",children:"Base Salary"}),e.jsx(T,{type:"number",value:k,onChange:s=>q(s.target.value),placeholder:"Enter base salary"})]}),e.jsxs(V,{children:[e.jsx(d,{color:"secondary",onClick:()=>b(!1),children:"Close"}),e.jsx(d,{color:"primary",onClick:pe,children:"Save Salary"})]})]}),e.jsxs(F,{visible:he,onClose:()=>U(!1),size:"lg",children:[e.jsx(v,{closeButton:!0,children:e.jsxs(D,{children:["Payslip for ",r==null?void 0:r.name]})}),e.jsx(w,{children:r&&e.jsxs(e.Fragment,{children:[e.jsxs("div",{className:"mb-4",children:[e.jsxs("p",{children:[e.jsx("strong",{children:"Date Period:"})," ",O," 1, ",i," – ",O," 30,"," ",i]}),e.jsxs("p",{children:[e.jsx("strong",{children:"Employee Name:"})," ",r.name]}),e.jsxs("p",{children:[e.jsx("strong",{children:"Employee ID:"})," ",r.employee_id]}),e.jsxs("p",{children:[e.jsx("strong",{children:"Department:"})," ",r.department]}),e.jsxs("p",{children:[e.jsx("strong",{children:"Position:"})," ",r.job_position]})]}),e.jsx("div",{className:"table-responsive",style:{overflowX:"auto"},children:e.jsxs("table",{className:"table table-bordered",children:[e.jsx("thead",{children:e.jsxs("tr",{children:[e.jsx("th",{children:"Earnings"}),e.jsx("th",{children:"Amount"}),e.jsx("th",{children:"Deductions"}),e.jsx("th",{children:"Amount"})]})}),e.jsxs("tbody",{children:[e.jsxs("tr",{children:[e.jsx("td",{children:"Base Salary"}),e.jsxs("td",{children:["₱",parseFloat(r.base_salary||0).toLocaleString("en-PH",{minimumFractionDigits:2,maximumFractionDigits:2})]}),e.jsx("td",{children:"Tax"}),e.jsxs("td",{children:["₱",parseFloat(r.tax||0).toLocaleString("en-PH",{minimumFractionDigits:2,maximumFractionDigits:2})]})]}),e.jsxs("tr",{children:[e.jsx("td",{children:"Overtime Pay"}),e.jsxs("td",{children:["₱",parseFloat(r.total_overtime_amount||0).toLocaleString("en-PH",{minimumFractionDigits:2,maximumFractionDigits:2})]}),e.jsx("td",{colSpan:"2"})]}),e.jsxs("tr",{children:[e.jsx("td",{children:"Bonus"}),e.jsxs("td",{children:["₱",parseFloat(r.bonus||0).toLocaleString("en-PH",{minimumFractionDigits:2,maximumFractionDigits:2})]})]}),ce.map((s,t)=>e.jsxs("tr",{children:[e.jsx("td",{colSpan:"2"}),e.jsx("td",{children:s.type}),e.jsxs("td",{children:["₱",parseFloat(s.amount||0).toLocaleString("en-PH",{minimumFractionDigits:2,maximumFractionDigits:2})]})]},t)),e.jsxs("tr",{children:[e.jsx("th",{children:"Gross Salary"}),e.jsxs("th",{children:["₱",(parseFloat(r.base_salary||0)+parseFloat(r.total_overtime_amount||0)+parseFloat(r.bonus||0)).toLocaleString("en-PH",{minimumFractionDigits:2,maximumFractionDigits:2})]}),e.jsx("th",{children:"Total Deductions"}),e.jsxs("th",{children:["₱",(parseFloat(r.tax||0)+parseFloat(r.benefits_total||0)).toLocaleString("en-PH",{minimumFractionDigits:2,maximumFractionDigits:2})]})]}),e.jsxs("tr",{children:[e.jsx("th",{children:"Net Pay"}),e.jsxs("th",{colSpan:"3",children:["₱",(parseFloat(r.base_salary||0)+parseFloat(r.total_overtime_amount||0)+parseFloat(r.bonus||0)-parseFloat(r.tax||0)-parseFloat(r.benefits_total||0)).toLocaleString("en-PH",{minimumFractionDigits:2,maximumFractionDigits:2})]})]})]})]})})]})})]})]})};export{We as default};
